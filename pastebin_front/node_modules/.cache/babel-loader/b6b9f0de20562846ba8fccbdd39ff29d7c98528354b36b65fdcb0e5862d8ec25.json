{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"paste\"\n};\nconst _hoisted_2 = {\n  class: \"alias\"\n};\nconst _hoisted_3 = {\n  class: \"contain\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($setup.paste.alias), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($setup.paste.contain), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","paste","alias","_hoisted_3","contain"],"sources":["/Users/hedrjo/Desktop/pastebin/pastebin_front/src/components/pastebinDetail.vue"],"sourcesContent":["<script setup>\nimport { onMounted, ref } from 'vue';\nimport axios from 'axios';\nimport { useRoute } from 'vue-router';\n\nconst baseUrl = 'http://localhost:4000';\nconst paste = ref(null);\n\nconst route = useRoute();\nconst alias = route.params.id;\n\nasync function getPaste() {\n    try {\n        const response = await axios.get(`${baseUrl}/bins/${alias}`);\n        paste.value = response.data;\n    } catch (error) {\n        console.error('Error fetching paste:', error);\n        paste.value = {};\n    }\n}\n\nonMounted(async () => {\n    await getPaste();\n});\n</script>\n<template>\n    <div class=\"paste\">\n        <span class=\"alias\">{{ paste.alias }}</span>\n        <span class=\"contain\">{{ paste.contain }}</span>\n    </div>\n</template>"],"mappings":";;EA0BSA,KAAK,EAAC;AAAO;;EACRA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAS;;uBAFzBC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,CAA4C,QAA5CC,UAA4C,EAAAC,gBAAA,CAArBC,MAAA,CAAAC,KAAK,CAACC,KAAK,kBAClCL,mBAAA,CAAgD,QAAhDM,UAAgD,EAAAJ,gBAAA,CAAvBC,MAAA,CAAAC,KAAK,CAACG,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}