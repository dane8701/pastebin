{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"paste\"\n};\nconst _hoisted_2 = {\n  class: \"alias\"\n};\nconst _hoisted_3 = {\n  class: \"contain\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$setup.paste && $setup.paste.alias ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($setup.paste.alias), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString($setup.paste.contain), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" Loading... \")), _createElementVNode(\"button\", {\n    onClick: $setup.goToPastList\n  }, \"Go back to the list\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","$setup","paste","alias","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_hoisted_3","contain","_hoisted_4","onClick","goToPastList"],"sources":["/Users/hedrjo/Desktop/pastebin/pastebin_front/src/components/pastebinDetail.vue"],"sourcesContent":["<script setup>\nimport { onMounted, ref } from 'vue';\nimport axios from 'axios';\nimport { useRoute } from 'vue-router';\nimport router from \"../routes/index\"\n\n\nconst baseUrl = 'http://localhost:4000';\nconst paste = ref(null);\n\nconst route = useRoute();\nconst alias = route.params.id;\n\nasync function getPaste() {\n    try {\n        const response = await axios.get(`${baseUrl}/bins/${alias}`);\n        console.log(response);\n        paste.value = response.data;\n    } catch (error) {\n        console.error('Error fetching paste:', error);\n        paste.value = {};\n    }\n}\n\nfunction goToPastList() {\n    this.$router.push({ name: 'pasteList'});\n}\n\nonMounted(async () => {\n    await getPaste();\n});\n</script>\n<template>\n    <div v-if=\"paste && paste.alias\" class=\"paste\">\n        <span class=\"alias\">{{ paste.alias }}</span>\n        <span class=\"contain\">{{ paste.contain }}</span>\n    </div>\n    <div v-else>\n        Loading...\n    </div>\n    <button @click=\"goToPastList\">Go back to the list</button>\n</template>"],"mappings":";;EAAAA,GAAA;EAiCqCC,KAAK,EAAC;;;EAC7BA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAS;;EAnC7BD,GAAA;AAAA;;uBAAAE,mBAAA,CAAAC,SAAA,SAiCeC,MAAA,CAAAC,KAAK,IAAID,MAAA,CAAAC,KAAK,CAACC,KAAK,I,cAA/BJ,mBAAA,CAGM,OAHNK,UAGM,GAFFC,mBAAA,CAA4C,QAA5CC,UAA4C,EAAAC,gBAAA,CAArBN,MAAA,CAAAC,KAAK,CAACC,KAAK,kBAClCE,mBAAA,CAAgD,QAAhDG,UAAgD,EAAAD,gBAAA,CAAvBN,MAAA,CAAAC,KAAK,CAACO,OAAO,iB,oBAE1CV,mBAAA,CAEM,OAvCVW,UAAA,EAqCgB,cAEZ,IACAL,mBAAA,CAA0D;IAAjDM,OAAK,EAAEV,MAAA,CAAAW;EAAY,GAAE,qBAAmB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}